---
swagger: "2.0"
info:
  description: "This api exposes the api's for the Coolestproject registration website,\
    \ voting system, event setup."
  version: "0.0.4"
  title: "Coolestprojects registration"
tags:
- name: "registration"
- name: "login"
- name: "user"
paths:
  /register:
    post:
      tags:
      - "registration"
      summary: "Create new registration"
      operationId: "registerPOST"
      parameters:
      - in: "body"
        name: "registration"
        description: "The registration to create."
        required: false
        schema:
          $ref: "#/definitions/Registration"
      responses:
        200:
          description: "OK"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Registration"
  /participants:
    post:
      tags:
      - "project"
      summary: "Create new participant"
      operationId: "participantPOST"
      parameters: []
      responses:
        200:
          description: "OK"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "Participant"
    get:
      tags:
      - "project"
      summary: "get participant"
      operationId: "participantGET"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Participant"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "Participant"                  
  /userinfo:
    get:
      tags:
      - "user"
      summary: "get userinfo for the logged in user"
      operationId: "userinfoGET"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "User"
    patch:
      tags:
        - "user"
      summary: "update user"
      operationId: "userinfoPATCH"  
      parameters:
      - in: "body"
        name: "user"
        description: "User info"
        required: false
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "User"
    delete:
      tags:
        - "user"
      summary: "delete user"
      operationId: "userinfoDELETE" 
      responses:
        200:
          description: "OK"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "User"
  /projectinfo:
    get:
      tags:
      - "project"
      summary: "get projectinfo for the logged in user"
      operationId: "projectinfoGET"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Project"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "Project"
    patch:
      tags:
        - "project"
      summary: "update project"
      operationId: "projectinfoPATCH"  
      parameters:
      - in: "body"
        name: "project"
        description: "Project info"
        required: false
        schema:
          $ref: "#/definitions/Project"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Project"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "Project"
    post:
      tags:
        - "project"
      summary: "update project"
      operationId: "projectinfoPOST"  
      parameters:
      - in: "body"
        name: "project"
        description: "Project info"
        required: false
        schema:
          $ref: "#/definitions/Project"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Project"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "Project"      
    delete:
      tags:
        - "project"
      summary: "delete project"
      operationId: "projectinfoDELETE" 
      responses:
        200:
          description: "OK"
        500:
          description: "Error"
          schema:
            $ref: "#/definitions/Error"
      security:
      - loginToken: []
      x-swagger-router-controller: "Project"
  /login:
    post:
      tags:
      - "login"
      summary: "Login / Activate account"
      operationId: "loginPOST"
      parameters:
      - in: "body"
        name: "login"
        description: "Login information"
        required: false
        schema:
          $ref: "#/definitions/LoginActivate"
      responses:
        200:
          description: "OK"
          headers:
            X-CSRF-Token:
              type: "string"
              description: "CSRF token required for state changes, valid for the whole\
                \ session"
            Set-Cookie:
              type: "string"
              description: "http only session cookie"
          schema:
            $ref: "#/definitions/Login"
      x-swagger-router-controller: "Login"
  /mailToken:
    post:
      tags:
      - "login"
      summary: "Get new token to login"
      operationId: "mailLoginPOST"
      parameters:
      - in: "body"
        name: "login"
        description: "email address"
        required: true
        schema:
          $ref: "#/definitions/LoginMail"
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "Login"
securityDefinitions:
  loginToken:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Login:
    type: "object"
    properties:
      api_key:
        type: "string"
      expires:
        type: "string"
        format: "date-time"
    example:
      expires: "2000-01-23T04:56:07.000+00:00"
      api_key: "api_key"
  Error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
      message:
        type: "string"
  Voucher:
    type: "object"
    required:
    - "code"
    properties:
      code:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      postalcode:
        type: "integer"
        example: 1000
        minimum: 1000
        maximum: 9999
      language:
        type: "string"
        enum:
        - "nl"
        - "fr"
        - "en"
      email:
        type: "string"
        format: "email"
      firstname:
        type: "string"
        example: "Jane"
      lastname:
        type: "string"
        example: "Doe"
      sex:
        type: "string"
        enum:
        - "m"
        - "f"
        - "x"
      gsm:
        type: "string"
        example: "+32460789101"
        pattern: "^((\\+|00)32\\s?|0)([1-9][0-9]\\d{6})\\d?$"
      general_questions:
        type: "array"
        items:
          type: "string"
          enum:
          - "photo"
          - "contact"
          - "no_photo"
          - "no_contact"
      birthmonth:
        type: "string"
        format: "date"
      t_size:
        type: "string"
        enum:
        - "female_M116"
        - "female_M122"
        - "female_M128"
        - "female_M134"
        - "female_M146"
        - "female_M152"
        - "female_M158"
        - "female_M164"
        - "female_M170"
        - "female_M176"
        - "female_medium"
        - "female_large"
        - "female_xl"
        - "male_M116"
        - "male_M122"
        - "male_M128"
        - "male_M134"
        - "male_M140"
        - "male_M146"
        - "male_M152"
        - "male_M158"
        - "male_M164"
        - "male_M170"
        - "male_M176"
        - "male_Xsmall"
        - "male_small"
        - "male_medium"
        - "male_large"
        - "male_xl"
        - "male_xxl"
        - "male_3xl- "
      gsm_guardian:
        type: "string"
        example: "+32460789101"
        pattern: "^((\\+|00)32\\s?|0)([1-9][0-9]\\d{6})\\d?$"
      email_guardian:
        type: "string"
        format: "email"
      via:
        type: "string"
        maxLength: 200
      medical:
        type: "string"
        maxLength: 500
      extra:
        type: "string"
        maxLength: 500
  Project:
    type: "object"
    properties:
      own_project:
        type: "boolean"
      project_id:
        type: "integer"
      project_name:
        type: "string"
        maxLength: 100
      project_code:
        type: "string"
        maxLength: 36
        minLength: 36
      project_descr:
        type: "string"
        maxLength: 4000
      project_type:
        type: "string"
        maxLength: 100
      project_lang:
        type: "string"
        enum:
        - "nl"
        - "fr"
        - "en"
  Registration:
    type: "object"
    required:
    - "birthmonth"
    - "firstname"
    - "lastname"
    - "mandatory_approvals"
    - "postalcode"
    - "sex"
    - "language"
    properties:
      postalcode:
        type: "integer"
        example: 1000
        minimum: 1000
        maximum: 9999
      email:
        type: "string"
        format: "email"
      firstname:
        type: "string"
        example: "Jane"
      lastname:
        type: "string"
        example: "Doe"
      sex:
        type: "string"
        enum:
        - "m"
        - "f"
        - "x"
      language:
        type: "string"
        enum:
        - "nl"
        - "fr"
        - "en"
      general_questions:
        type: "array"
        items:
          type: "string"
          enum:
          - "photo"
          - "contact"
          - "no_photo"
          - "no_contact"
      mandatory_approvals:
        type: "array"
        items:
          type: "string"
          enum:
          - "ok"
      birthmonth:
        type: "string"
        format: "date"
      t_size:
        type: "string"
        enum:
        - "female_M116"
        - "female_M122"
        - "female_M128"
        - "female_M134"
        - "female_M146"
        - "female_M152"
        - "female_M158"
        - "female_M164"
        - "female_M170"
        - "female_M176"
        - "female_medium"
        - "female_large"
        - "female_xl"
        - "male_M116"
        - "male_M122"
        - "male_M128"
        - "male_M134"
        - "male_M140"
        - "male_M146"
        - "male_M152"
        - "male_M158"
        - "male_M164"
        - "male_M170"
        - "male_M176"
        - "male_Xsmall"
        - "male_small"
        - "male_medium"
        - "male_large"
        - "male_xl"
        - "male_xxl"
        - "male_3xl- "
      via:
        type: "string"
        maxLength: 200
      medical:
        type: "string"
        maxLength: 500
      extra:
        type: "string"
        maxLength: 500
      project_name:
        type: "string"
        maxLength: 100
      project_descr:
        type: "string"
        maxLength: 4000
      project_type:
        type: "string"
        maxLength: 100  
      project_code:
        type: "string"
        maxLength: 36
        minLength: 36
      project_lang:
        type: "string"
        enum:
        - "nl"
        - "fr"
        - "en"
      gsm:
        type: "string"
        example: "+32460789101"
        pattern: "^((\\+|00)32\\s?|0)([1-9][0-9]\\d{6})\\d?$"
      gsm_guardian:
        type: "string"
        example: "+32460789101"
        pattern: "^((\\+|00)32\\s?|0)([1-9][0-9]\\d{6})\\d?$"
      email_guardian:
        type: "string"
        format: "email"
  LoginActivate:
    type: "object"
    properties:
      jwt:
        type: "string"
  LoginMail:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
  Participant:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"